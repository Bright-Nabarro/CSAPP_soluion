	.pos 0 
	irmovq stack, %rsp  	# Set up stack pointer  
	call main		# Execute main program
	halt			# Terminate program 

# g_data array
g_data:
	.quad	10
	.quad	9
	.quad	8
	.quad	7
	.quad	6
	.quad	5
	.quad	4
	.quad	3
	.quad	2
	.quad	1
g_data_end:

main:
#	leaq	80+g_data(%rip), %rsi
#	leaq	-80(%rsi), %rdi
    irmovq  g_data, %rdi
    irmovq  g_data_end, %rsi
	call	bubble_sort
	irmovq	$0, %rax
	ret


bubble_sort:
#	subq	$8, %rsi
    irmovq  $8, %r9
    subq    %r9, %rsi
	jmp	L2
L3:
#	addq	$8, %rax
    irmovq  $8, %r9
    subq    %r9, %rax
L5:
    rrmovq  %rax, %r8
    subq    %rsi, %r8
	je	L7
	mrmovq	8(%rax), %rdx
	mrmovq	(%rax), %rcx
    rrmovq  %rdx, %r8
    subq    %rcx, %r8
	jge	L3
	rmmovq	%rcx, 8(%rax)
	rmmovq	%rdx, (%rax)
	jmp	L3
L7:
#	subq	$8, %rsi
    irmovq  $8, %r9
    subq    %r9, %rsi
L2:
    rrmovq  %rsi, %r8
    subq    %rdi, %r8
	je	L8
	rrmovq	%rdi, %rax
	jmp	L5
L8:
	ret

    .pos 0x280
stack:
	  